16.1 q to q

sync
h:hopen `::5001
h"select ..."
h(`prices;0)  //this will will take first row
h ({...};`)

16.2 Binary Protocol

The communication between two kdb+ sessions can be one of two formats.
The original binary protocol, or the newer compressed protocol.

After the release of Kdb+ 2.6 version, the q processes and the C/java API are capable of sending compressed messages.
THE INITIAL HANDSHAKE between a kdb+ server and a client (either another kdb+ process or java client),
includes a declaration of its capabilities. If the client was not written to handle the compressed format (e.g. old kdb version),
the uncompressed format will be used.

For increased performance, messages between processes on the same host, and messages that do not compress to less than
half the original size will be sent uncompressed.

When the server reverts to using the uncompressed protocol, the new timestamp and timespan data types can NOT be sent (old protocol does not know these types)

Once the compressed format has been locally decompressed, converting the stream of bytes into usable data types
is exactly the same in both formats (old prior 2.6 and new one)

The C API can be used in two ways. Clients can use the C header file k.h,
along with the object file c.o located in platfrom specific sub-directory of the Kx q repo,
to communicate with kdb+servers.

In addition to allowing remote access to data, the C API
also enables us to embed custom functions into a running kdb+process.
By compiling a dynamically loaded library, new features can be added to the q.

Jamal mentioned during the interview that compression does not kicks in if payload is less than 2GB
