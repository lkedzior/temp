#to create global ignore file for all local projects
git config --global core.excludesfile ~/.gitignore_global

then put e.g. the below to the file
$ cat ~/.gitignore_global
*.class
# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

.classpath
.settings
build.number


#########################autocrlf settings
to check current settings
git config --get core.autocrlf
true


the settings are stored in ~/.gitconfig

to change to false
git config --global core.autocrlf false
or git config --global --edit

/use input if you just want LF files in repo

#false
Checkout as-is, commit as-is Git will not perform any conversions when checking out or committing text files. Choosing this option is not recommended for cross-platform projects ("core.autocrlf" is set to "false")


Other options
There are 3 options:

    Checkout Windows-style, commit Unix-style line endings Git will convert LF to CRLF when checking out text files. When committing text files, CRLF will be converted to LF. For cross-platform projects, this is the recommended setting on Windows ("core.autocrlf" is set to "true")

    Checkout as-is, commit Unix-style line endings Git will not perform any conversion when checking out text files. When committing text files, CRLF will be converted to LF. For cross-platform projects this is the recommended setting on Unix ("core.autocrlf" is set to "input").

    Checkout as-is, commit as-is Git will not perform any conversions when checking out or committing text files. Choosing this option is not recommended for cross-platform projects ("core.autocrlf" is set to "false")



##############Creating a new tag

git fetch --tags
git tag -l 7.4.1*
git checkout refs/tags/7.4.1+b7 -b 7.4.1+b7_patch
/Make a change and then
git add .
git commit -m "TMI-1185 updating setPorts to export missing port variables"
git push origin HEAD
git tag -a 7.4.1+b8 -m "TMI-1185 fix for missing gfx_mi hdb ports in setPorts.sh"
git push origin 7.4.1+b8


##################################Training
Configuration levels
--system
Set for you (remotely?)

--global (inherits from system and overrides them)
This one if for your user account

--local
This one if for project level

#Print system and global settings
git config --global --list

git config --global user.name "Lukasz Kedzior"
git config --global user.email "..."

#Use simple push
git config --global  push.default simple

git config --global core.editor "atom --wait"

git config --global core.autocrlf true (on Windows?)
git config --global core.autocrlf inpt (on macOS|Linux)

To see the value just skip the value
git config --global core.autocrlf

#Init git in a project
git init <repo-name>
cd <repo-name>

That will create .git folder and default master branch

Different trees
-working (new & modified files)
-staging
-history

working tree - everything that is not known to git yet
to make stuff known to git
we do git add

-now in staging tree (files that are known to git)

then we commit to move the files to the history tree
git commit

changes anr in the hitory tree

#Creating a branch
git branch myBranch
git checkout myBranch

then do a change

then
git checkout master
git merge myBranch

git branch --merged
git branch -d myBranch /-d is shortcut for --delete
